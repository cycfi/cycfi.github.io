/**
  Definition tables are indented on the left, and have horizontal lines between
  every row.
*/
.definition-table {
  margin-left: 15px;
  margin-bottom: 15px;
  border-bottom: 1px solid #eff0f1;
  border-top: 1px solid #eff0f1;
  width: 100%;
}

.definition-table > tbody > tr {
  border-top: 1px solid #eff0f1;
}

.definition-table > tbody > tr > th {
  text-align: left;
}

.definition-table > tbody > tr > td {
  padding-right: 1.5em;
  vertical-align: top;
}

.definition-table > tbody > tr > td > p {
  margin: 0;
  display: inline;
}

.definition-table > tbody > tr > td.type {
  font-family: Consolas, "Liberation Mono", Menlo, Courier, monospace;
  white-space: nowrap;
  vertical-align: top;
}

.definition-table > tbody > tr > td.field {
  font-family: Consolas, "Liberation Mono", Menlo, Courier, monospace;
  white-space: nowrap;
  vertical-align: top;
}

.definition-table > tbody > tr > td.decl {
  text-indent: -3em;
  padding-left: 3em;
  font-family: Consolas, "Liberation Mono", Menlo, Courier, monospace;
  vertical-align: top;
}

.definition-table > tbody > tr > td.defn {
  padding-right: 0;
}

/*
  Associated tables are those that enumerate library subcomponents and
  associated elements.
 */
.associated-table {
  margin-left: 15px;
  margin-bottom: 15px;
  border-bottom: 1px solid #eff0f1;
  border-top: 1px solid #eff0f1;
  width: 100%;
}

.associated-table > tbody > tr {
  border-top: 1px solid #eff0f1;
}

.associated-table > tbody > tr > th {
  text-align: left;
}

.associated-table > tbody > tr > td > p {
  margin: 0;
  display: inline;
}

.associated-table > tbody > tr > td.name {
  text-indent: -3em;
  padding-left: 3em;
  font-family: Consolas, "Liberation Mono", Menlo, Courier, monospace;
  vertical-align: top;
  padding-right: 1.5em;
}
/*# sourceMappingURL=data:application/json;base64, */